# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-27 16:09
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import geoposition.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.URLField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('secondary_names', models.TextField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('position', geoposition.fields.GeopositionField(max_length=42)),
                ('web', models.URLField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('schedules', models.TextField(blank=True, null=True)),
                ('valet_parking', models.BooleanField(default=False)),
                ('auto_service', models.BooleanField(default=False)),
                ('wifi', models.BooleanField(default=False)),
                ('restrooms', models.BooleanField(default=False)),
                ('credit_cards', models.BooleanField(default=False)),
                ('reservations', models.BooleanField(default=False)),
                ('outdoor_seats', models.BooleanField(default=False)),
                ('air_conditioning', models.BooleanField(default=False)),
                ('parking', models.BooleanField(default=False)),
                ('delivery', models.BooleanField(default=False)),
                ('to_take_away', models.BooleanField(default=False)),
                ('wheelchair_access', models.BooleanField(default=False)),
                ('mapped', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(to='venues.Category')),
            ],
            options={
                'verbose_name': 'Punto',
                'verbose_name_plural': 'Puntos',
                'permissions': (('set_mapped', 'Puede actualizar el estado a mapeado'), ('can_export', 'Puede exportar los lugares')),
            },
        ),
    ]
